"""
Решаем задания 1 - 15
"""
from laba_1.comb_utils import (
    get_placements,
    get_permutations,
    get_combinations,
)

# ------------------------------- ЗАДАНИЕ 1 -------------------------------
print('Задание 1:')
print(
    'Научное общество состоит из 25 человек. Надо выбрать президента \n'
    'общества, вице-президента, ученого секретаря и казначея. Сколькими \n'
    'способами может быть сделан этот выбор, если каждый член общества может \n'
    'занимать лишь один пост? \n'
)
# нужно разместить 25 человек на 4 поста
task_1_result = get_placements(
    el_count=25,
    pos_count=4,
)
print(
    f'{task_1_result}'
)


# ------------------------------- ЗАДАНИЕ 2 -------------------------------
print('\nЗадание 2:')
print(
    'В цехе работают 8 токарей. Сколькими способами можно поручить трем \n'
    'из них изготовление различных видов деталей (по одному виду на каждого). \n'
)

task_2_result = get_placements(
    el_count=8,
    pos_count=3,
)
print(
    f'Ответ: {task_2_result}'
)


# ------------------------------- ЗАДАНИЕ 3 -------------------------------
print('\nЗадание 3:')
print(
    'Из 10 книг выбирают 4 для рассылки по разным адресам. \n'
    'Сколькими способами это можно сделать? \n'
)

task_3_result = get_placements(
    el_count=10,
    pos_count=4,
)
print(
    f'Ответ: {task_3_result}'
)


# ------------------------------- ЗАДАНИЕ 4 -------------------------------
print('\nЗадание 4:')
print(
    'Сколькими способами можно опустить 5 писем в 11 почтовых ящиков,  \n'
    'если в каждый ящик опускают не более одного письма? \n'
)

task_4_result = get_placements(
    el_count=11,
    pos_count=5,
)
print(
    f'Ответ: {task_4_result}'
)


# ------------------------------- ЗАДАНИЕ 5 -------------------------------
print('\nЗадание 5:')
print(
    'Студенту необходимо сдать 5 экзаменов в течение 12 дней.  \n'
    'Сколькими способами можно составить расписание экзаменов, если в \n'
    'течение дня он может сдать не более одного экзамена? \n'
)

task_5_result = get_placements(
    el_count=12,
    pos_count=5,
)
print(
    f'Ответ: {task_5_result}'
)


# ------------------------------- ЗАДАНИЕ 6 -------------------------------
print('\nЗадание 6:')
print(
    'Сколькими способами можно преподнести 4 различных подарка 6 ученикам \n'
    'таким образом, чтобы каждый ученик получил не более одного подарка? \n'
)

task_6_result = get_placements(
    el_count=6,
    pos_count=4,
)
print(
    f'Ответ: {task_6_result}'
)


# ------------------------------- ЗАДАНИЕ 7 -------------------------------
print('\nЗадание 7:')
print(
    'Сколькими способами можно обить 6 стульев тканью, если имеются \n'
    'ткани 6 различных цветов и все стулья должны быть разного цвета? \n'
)

task_7_result = get_permutations(
    el_count=6,
)
print(
    f'Ответ: {task_7_result}'
)


# ------------------------------- ЗАДАНИЕ 8 -------------------------------
print('\nЗадание 8:')
print(
    'Дачник выделил на своём участке семь грядок для выращивания овощей, \n'
    'т.к. хочет иметь свои помидоры, огурцы, перец, лук, чеснок, салат и кабачки. \n'
    'Каждый вид должен иметь отдельную грядку. Сколькими способами \n'
    'он может расположить грядки для посадки? \n'
)

task_8_result = get_permutations(
    el_count=7,
)
print(
    f'Ответ: {task_8_result}'
)


# ------------------------------- ЗАДАНИЕ 9 -------------------------------
print('\nЗадание 9:')
print(
    'Пассажирский поезд состоит из трех багажных вагонов и восьми купированных. \n'
    'Сколькими способами можно сформировать состав, если багажные \n'
    'вагоны должны находиться в его начале? \n'
)

kup_vagons = get_permutations(
    el_count=8,
)
bagaj_vagons = get_permutations(
    el_count=3,
)
task_9_result = kup_vagons * bagaj_vagons
print(
    f'Ответ: {kup_vagons} * {bagaj_vagons} = {task_9_result}'
)


# ------------------------------- ЗАДАНИЕ 10 -------------------------------
print('\nЗадание 10:')
print(
    'Сколькими способами можно выбрать 5 делегатов из состава \n'
    'конференции, на которой присутствуют 15 человек? \n'
)

task_10_result = get_combinations(
    el_count=15,
    pos_count=5,
)
print(
    f'Ответ: {task_10_result}'
)


# ------------------------------- ЗАДАНИЕ 11 -------------------------------
print('\nЗадание 11:')
print(
    'У одного студента есть 11 книг по математике, а другого – 15 книг.  \n'
    'Сколькими способами они могут выбрать по 3 книги для обмена? \n'
)

first_student_book_combs = get_combinations(
    el_count=11,
    pos_count=3,
)
second_student_book_combs = get_combinations(
    el_count=15,
    pos_count=3,
)

task_11_result = (
    first_student_book_combs * second_student_book_combs
)
print(
    f'Ответ: {task_11_result}'
)


# ------------------------------- ЗАДАНИЕ 12 -------------------------------
print('\nЗадание 12:')
print(
    'Сколько прямых провести через 8 точек, никакие \n'
    'три из которых не лежат на одной прямой? \n'
)
# для построения прямой нужно всего две точки
task_12_result = get_combinations(
    el_count=8,
    pos_count=2,
)
print(
    f'Ответ: {task_12_result}'
)


# ------------------------------- ЗАДАНИЕ 13 -------------------------------
print('\nЗадание 13:')
print(
    'Компания из 15 человек разделяется на две группы, одна из которых \n'
    'состоит из 6 человек, а другая – из 9 человек. Сколькими способами \n'
    'это можно сделать? \n'
)

# если из одной "кучи" вытащить несколько
# элементов то получим два множества -
# то, что осталось в "куче" и множество элементов,
# которые достали из нее. По такой логике достаточно
# лишь посчитать количество сочетаний в любой группе
# т.к. в противоположной останется свое уникальное сочетание
task_13_result = get_combinations(
    el_count=15,
    pos_count=6,
)
print(
    f'Ответ: {task_13_result}'
)


# ------------------------------- ЗАДАНИЕ 14 -------------------------------
print('\nЗадание 14:')
print(
    'В пространстве даны 7 точек, никакие четыре из которых не лежат в одной \n'
    'плоскости. Сколько различных плоскостей можно провести через эти точки? \n'
)

# Замечание про 4 точки, которые не лежат в
# одной плоскости - бессмысленно в рамках
# поставленной задачи. Все что нужно знать -
# плоскость можно построить как минимум
# на основе трех точек, не лежащих на одной прямой.
# Ответом является сочетание из 7 по 3
task_14_result = get_combinations(
    el_count=7,
    pos_count=3,
)
print(
    f'Ответ: {task_14_result}'
)


# ------------------------------- ЗАДАНИЕ 15 -------------------------------
print('\nЗадание 15:')
print(
    'В урне 6 белых и 8 черных шаров. Из нее одновременно вынимают \n'
    'три шара одного цвета. Сколькими способами это можно сделать? \n'
)
# различные сочетания черных шаров
black_combs = get_combinations(
    el_count=8,
    pos_count=3,
)
# различные сочетания белых шаров
white_combs = get_combinations(
    el_count=6,
    pos_count=3,
)

# сумма количества сочетаний
# белых и черных шаров
task_15_result = black_combs + white_combs
print(
    'Ответ: \n'
    f'Способов вытащить 3 белых шара из 6 - {white_combs}; \n'
    f'Способов вытащить 3 черных шара из 8 - {black_combs}; \n'
    'Всего способов вытащить 3 шара одного цвета: \n'
    f'{white_combs} + {black_combs} = {task_15_result}; \n'
)
